package com.company;

public class Main {

    public static void main(String[] args) {
        int[] a = create5(8, 2, 6, 1, 9);
	    int[] b = create5(5, 4, 3, 2, 1);
	    System.out.println(prettyPrint(a));
	    System.out.println(prettyPrint(resize(a, 8)));
	    //System.out.println(prettyPrint(append(a, b)));
	    System.out.println(a.length);
	    System.out.println(prettyPrint(subArray(a, 0, 6)));
    }
    public static int min(int a, int b) {
        if (a < b)
            return a;
        else
            return b;
    }
    
    //A function that I created for convenience, this is not part of the assignment
    public static int[] create5(int a, int b, int c, int d, int e) {
    	int[] rv = new int[5];
    	rv[0] = a;
    	rv[1] = b;
    	rv[2] = c;
    	rv[3] = d;
    	rv[4] = e;
    	
    	return rv;
    }

    public static int aMin(int[] a) {
        int rv = 2147483647;

        for (int i = 0; i < a.length; i++)
            if (a[i] < rv)
                rv = a[i];
        return rv;
    }

    public static int[] add(int[] a, int[] b) {
        int max = 0;
        if (a.length > b.length)
            max = a.length;
        else
            max = b.length;

        int[] rv = new int[max];
        if (a.length > b.length)
            rv = a;
        else
            rv = b;

        for (int i = 0; i < a.length && i < b.length; i++)
            rv[i] = a[i] + b[i];
        return rv;
    }

    public static String prettyPrint(int[] a) {
        String rv = "{";

        for (int i = 0; i < a.length; i++) {
            if (i != a.length - 1)
                rv += a[i] + ", ";
            else
                rv += a[i];
        }
        rv += "}";
        return rv;
    }

    public static int[] copy (int[] a) {
        int[] rv = new int[a.length];

        for (int i = 0; i < a.length; i++)
            rv[i] = a[i];

        return rv;
    }

    public static int[] resize(int[] a, int newLength) {
        int[] rv = new int[newLength];

        for (int i = 0; i < newLength; i++) {
            if (i < a.length)
                rv[i] = a[i];
            else
                rv[i] = 0;
        }
        return rv;
    }
    
    public static int[] append(int[] a, int[] b) {
        int len = a.length + b.length;
        int[] rv = new int[len];
        
        for (int i = 0; i < len; i++) {
        	if (i < a.length)
        	    rv[i] = a[i];
        	else
        	    rv[i] = b[i];
        }
        return rv;
    }
    
    public static int[] subArray(int[] a, int firstIncluded, int firstExcluded) {
        int len = firstExcluded - firstIncluded;
        int[] rv = new int[len];
        if (firstExcluded <= a.length) {
        	for (int i = 0; i < len; i++) {
        	    rv[i] = a[firstIncluded+i];
        	}
        	return rv;
        }
        else if (firstIncluded == firstExcluded) {
        	return null;
        }
        else{
        	return null;
        }
    }
    
    public static void makeSorted(int[] a) {
        int swap = 0, rv = 0;
        
        for (int i = 1; i < a.length; i++) {
        	if (a[i-1] > a[i]) {
        	    //start
        	}
        }
    }
}
